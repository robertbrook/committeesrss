{
  "name": "html-extractor",
  "description": "Extract meta-data from a html string. It extracts the body, title, meta-tags and first headlines to a object to push them to a search indexer like elastic-search",
  "version": "0.1.3",
  "homepage": "https://github.com/mpneuried/html-extractor",
  "keywords": [
    "html",
    "parse",
    "extract",
    "body",
    "search",
    "tool",
    "elasic"
  ],
  "author": {
    "name": "Mathias Peter"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mpneuried/html-extractor.git"
  },
  "bugs": {
    "url": "https://github.com/mpneuried/html-extractor/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/mpneuried/html-extractor/blob/master/LICENSE-MIT"
    }
  ],
  "main": "./lib/html_extractor.js",
  "engines": {
    "node": ">= 0.8.10"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "htmlparser2": "*",
    "lodash": "*"
  },
  "devDependencies": {
    "should": "*",
    "request": "*",
    "grunt-regarde": "*",
    "grunt-contrib-coffee": "0.5.0",
    "grunt-mocha-cli": "*",
    "grunt": "~0.4.0"
  },
  "readme": "html-extractor\n==============\n\n[![Build Status](https://secure.travis-ci.org/mpneuried/html-extractor.png?branch=master)](http://travis-ci.org/mpneuried/html-extractor)\n\nExtract meta-data from a html string. It extracts the body, title, meta-tags and first headlines to a object to push them to a search indexer like elastic-search\n\n## Documentation in progress\n\n*Written in coffee-script*\n\n**INFO: all examples are written in coffee-script**\n\n\n## Install\n\n```\n  npm install html-extractor\n```\n\n## Initialize\n\n\n```coffee\nExtrator = require(\"html-extractor\")\nmyExtrator = new Extrator()\n```\n\n### `new Extrator( debug )`\n\n**arguments**\n- **debug** : *( `Boolean` optional: default = `false` )*  \nOutput the parsing time\n\n## Methods\n\n### Extrator.extract( html[, reduced], cb )\n\nCall `.extract()` to get the data of an html string\n\n**arguments:**\n\n- **html** : *( `String` required )*  \nThe html string to process\n- **reduced** : *( `Object` optional )*  \nA object to reduce the content of body to a specific site content. It is not possible to reduce to a tag without a attribute filter.\n\t- **reduced.tag** : *( `String` required if `reduced` is set )*  \n\tThe tag name of the html element to reduce to\n\t- **reduced.attr** : *( `String` required if `reduced` is set )*  \n\tThe attribute of the html element to reduce to\n\t- **reduced.val** : *( `String` required if `reduced` is set )*  \n\tThe attribute value of the html element to reduce to\n- **cb** : *( `Function` required )*  \nThe callback function\n\n**callback arguments:**\n\n- **error** : *( `Error` )*  \nError information. If no error occoured this will be `null`\n- **data** : *( `Object` )*  \nThe extraction result\n\t- **data.body** : *( `String` )*  \n\tThe whole body content or the content within the configured reduced element. There will be just the text content without html tags/attributes and without the content in script tags.\n\t- **data.h1** : *( `Array` )*  \n\tAn array containing all `h1` text contents. Including the `h1`elements outside the configured reduced element \n\t- **data.meta** : *( `Object` )*  \n\tA Object of all found meta tags with the syntax `<meta content=\"\" name=\"\">`. Other meta tags will be ignored.\n\t\t- **data.meta.charset** : *( `String` optional )*  \n\t\tIf a metatag with the charset setting like `<meta charset=\"utf-8\" >` is defined it will be returned under `data.meta.charset`\n\t\t- **data.meta.title** : *( `String` default = `\"\"` )*  \n\t\tIf tilte tag is defined it will be returned under `data.meta.title`. Otherwise the key will contain an empty string\n\t\t- **data.meta.description** : *( `String` default = `\"\"` )*  \n\t\tIf a metatag with the name `description` is defined it will be returned under `data.meta.description`. Otherwise the key will contain an empty string\n\t\t- **data.meta.keywords** : *( `Array` default = `[]` )*  \n\t\tIf a metatag with the name `keywords` is defined it will be returned as trimmed array of strings under `data.meta.keywords`. Otherwise the key will contain an empty string\n\n## Examples\n\n### simple\n\nThis is a simple example to extarct the content of a html document\n\n```coffee\nExtrator = require(\"html-extractor\")\nmyExtrator = new Extrator()\n\nhtml = \"\"\"\n<html>\n\t<head>\n\t\t<title>Testpage</title>\n\t</head>\n\t<body>\n\t\t<h1>Header 1</h1>\n\t\t<p>Content</p>\n\t</body>\n</html>\n\"\"\"\n\nmyExtrator.extract html, ( err, data )->\n\tif err\n\t\tthrow err\n\telse\n\t\tconsole.log data\n\t\t# {\n\t\t# \tmeta: {\n\t\t# \t\ttitle: 'Testpage',\n\t\t#\t\tdescription: '',\n\t\t#\t\tkeywords: []\n\t\t#\t},\n\t\t#\tbody: ' Header 1 Content ',\n\t\t#\th1: [ 'Header 1' ]\n\t\t# }\n\treturn\n\n\n```\n\n*see `test/readme_example_simple`*\n\n### advanced\n\nThis is a advanced example to show the usage of the reducing.\nWith the reduce feature it is possible to reduce the body content to the content of a specific html element.\n\n```coffee\nExtrator = require(\"html-extractor\")\nmyExtrator = new Extrator()\n\nhtml = \"\"\"\n<html>\n\t<head>\n\t\t<title>Super page</title>\n\t\t<meta content=\"X, Y, Z\" name=\"keywords\">\n\t\t<meta content=\"Look at this super page\" name=\"description\">\n\t\t<meta content=\"Super pageCMS\" name=\"generator\">\n\t</head>\n\t<body>\n\t\t<div id=\"head\">\n\t\t\t<h1>My super page<sup>2</sup></h1>\n\t\t</div> \n\t\t<ul id=\"menu\">\n\t\t\t<li>Home</li>\n\t\t\t<li>First</li>\n\t\t\t<li>Second</li>\n\t\t</ul>\n\t\t<div id=\"content\">\n\t\t\t<h1>First article</h1>\n\t\t\t<p>Lorem ipsum dolor sit amet ... </p>\n\t\t\t<h1>Second article</h1>\n\t\t\t<p>Aenean commodo ligula eget dolor.</p>\n\t\t\t<script>\n\t\t\t\tvar superVar = [ 3,2,1 ]\n\t\t\t</script>\n\t\t</div>\n\t\t<div id=\"footer\">\n\t\t\tCopyright 2013\n\t\t</div>\n\t</body>\n</html>\n\"\"\"\n\nreduceTo = \n\ttag: \"div\"\n\tattr: \"id\"\n\tval: \"content\"\n\nmyExtrator.extract html, reduceTo, ( err, data )->\n\tif err\n\t\tthrow err\n\telse\n\t\tconsole.log data\n\t\t# {\n\t\t# \tmeta: {\n\t\t# \t\ttitle: 'Super page',\n\t\t# \t\tdescription: 'Look at this super page',\n\t\t# \t\tkeywords: ['X', 'Y', 'Z'],\n\t\t# \t\tgenerator: 'Super pageCMS'\n\t\t# \t},\n\t\t# \tbody: ' First article Lorem ipsum dolor sit amet ... Second article Aenean commodo ligula eget dolor. ',\n\t\t# \th1: ['My super page2', 'First article', 'Second article']\n\t\t# }\n\treturn\n\n```\n\n*see `test/readme_example_advanced`*\n\n## Work in progress\n\n`html-extractor` is work in progress. Your ideas, suggestions etc. are very welcome.\n\n## Changelog\n\n#### `0.1.3`\n\n* Fixed extraction to remove style-tag content\n\n#### `0.1.2`\n\n* Updated documentation\n\n#### `0.1.1`\n\n* Added raw documentation\n* Fixed `travis.yml`\n\n#### `0.1.0`\n\n* Initial version\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2010 TCS &lt;dev (at) tcs.de&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "readmeFilename": "README.md",
  "_id": "html-extractor@0.1.3",
  "dist": {
    "shasum": "8dff769a78bdde333da02b65bbc49bbea5a53f50"
  },
  "_from": "html-extractor@*",
  "_resolved": "https://registry.npmjs.org/html-extractor/-/html-extractor-0.1.3.tgz"
}
