{
  "name": "toc",
  "description": "Linkify HTML headers and generate a TOC.",
  "version": "0.3.0",
  "homepage": "https://github.com/cowboy/node-toc",
  "author": {
    "name": "\"Cowboy\" Ben Alman",
    "url": "http://benalman.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/cowboy/node-toc.git"
  },
  "bugs": {
    "url": "https://github.com/cowboy/node-toc/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/cowboy/node-toc/blob/master/LICENSE-MIT"
    }
  ],
  "main": "lib/toc",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt-contrib-watch": "~0.2.0",
    "grunt": "~0.4.0"
  },
  "keywords": [],
  "dependencies": {
    "slug": "~0.2.2",
    "entities": "~0.2.0",
    "lodash": "~1.0.1"
  },
  "readme": "# toc [![Build Status](https://secure.travis-ci.org/cowboy/node-toc.png?branch=master)](http://travis-ci.org/cowboy/node-toc)\n\nLinkify HTML headers and generate a TOC.\n\n## Getting Started\nInstall the module with: `npm install toc`\n\n```js\nvar toc = require('toc');\n```\n\n## Documentation\n\n### toc.untag\nStrip HTML tags from a string.\n\n```js\nvar stripped = toc.untag(html);\n```\n\n### toc.anchor\nConvert a string of text into something URL-friendly and not too fugly.\n\n```js\nvar anchor = toc.anchor(arbitraryText);\n```\n\n\n### toc.unique\nGet a unique name and store the returned name in names for future unique-name-gettingness.\n\n```js\nvar names = {};\nvar guaranteedUniqueAnchor1 = toc.unique(names, toc.anchor(arbitraryText));\nvar guaranteedUniqueAnchor2 = toc.unique(names, toc.anchor(arbitraryText));\n```\n\n\n### toc.process\nAnchorize all headers and inline a generated TOC, returning processed HTML.\n\n```js\nvar htmlWithAnchorsAndTOC = toc.process(html [, options]);\n```\n\n#### options\n\n* **placeholder** - `RegExp` - Used to match TOC placeholder. Defaults to `/<!--\\s*toc\\s*-->/gi`.\n* _Because this method calls the `toc.anchorize` and `toc.toc` methods internally, their options may be specified as well._\n\n\n### toc.anchorize\nParse HTML, returning an array of header objects and anchorized HTML.\n\n```js\nvar obj = toc.anchorize(html [, options]);\n```\n\n#### options\n\n* **headers** - `RegExp` - Used to match HTML headers. Defaults to `/<h(\\d)(\\s*[^>]*)>([\\s\\S]+?)<\\/h\\1>/gi`.\n* **tocMin** - `Number` - Min header level to add to TOC. Defaults to `2`.\n* **tocMax** - `Number` - Max header level to add to TOC. Defaults to `6`.\n* **anchorMin** - `Number` - Min header level to anchorize. Defaults to `2`.\n* **anchorMax** - `Number` - Max header level to anchorize. Defaults to `6`.\n* **header** - `String` | `Function` - Lodash template string or function used to anchorize a header.\n\n\n### toc.toc\nGenerate TOC HTML from an array of header objects.\n\n```js\nvar obj = toc.toc(headers [, options]);\n```\n\n#### options\n\n* **openUL** - `String` | `Function` - Lodash template string or function used to generate the TOC.\n* **closeUL** - `String` | `Function` - Lodash template string or function used to generate the TOC.\n* **openLI** - `String` | `Function` - Lodash template string or function used to generate the TOC.\n* **closeLI** - `String` | `Function` - Lodash template string or function used to generate the TOC.\n* **TOC** - `String` | `Function` - Lodash template string or function used to wrap the generated TOC.\n\n\n## Examples\n\nThe default HTML is pretty awesome, but you can customize the hell out of the generated HTML, eg.\n\n```js\nvar processedHTML = toc.process(unprocessedHTML, {\n  header: '<h<%= level %><%= attrs %> id=\"<%= anchor %>\"><%= header %></h<%= level %>>',\n  TOC: '<div class=\"toc\"><%= toc %></div>',\n  openUL: '<ul data-depth=\"<%= depth %>\">',\n  closeUL: '</ul>',\n  openLI: '<li data-level=\"H<%= level %>\"><a href=\"#<%= anchor %>\"><%= text %></a>',\n  closeLI: '</li>',\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n2013-03-08 - v0.3.0 - Separated `.process` method internals into `.anchorize` and `.toc` methods. Renamed `toc` template option to `TOC`.  \n2013-03-07 - v0.2.0 - Second official release. Minor changes.  \n2013-03-07 - v0.1.0 - First official release.\n",
  "readmeFilename": "README.md",
  "_id": "toc@0.3.0",
  "dist": {
    "shasum": "89e677be0851a173a054a644a04c343382e26653"
  },
  "_from": "toc@~0.3.0",
  "_resolved": "https://registry.npmjs.org/toc/-/toc-0.3.0.tgz"
}
